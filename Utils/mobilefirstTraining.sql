/*SQLyog Community v8.4MySQL - 5.1.46-community : Database - mobilefirst_training**********************************************************************//*!40101 SET NAMES utf8 */;/*!40101 SET SQL_MODE=''*/;/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;CREATE DATABASE IF NOT EXISTS `mobilefirst_training` /*!40100 DEFAULT CHARACTER SET latin1 */;USE `mobilefirst_training`;/*Table structure for table `accounts` */DROP TABLE IF EXISTS `accounts`;CREATE TABLE `accounts` (  `accountId` varchar(15) NOT NULL,  `userId` varchar(100) NOT NULL DEFAULT '',  `accountType` varchar(50) NOT NULL,  PRIMARY KEY (`accountId`),  KEY `FK_accounts_users` (`userId`),  CONSTRAINT `FK_accounts_users` FOREIGN KEY (`userId`) REFERENCES `users` (`userId`) ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8;/*Data for the table `accounts` */insert  into `accounts`(`accountId`,`userId`,`accountType`) values ('12345','bjones','Checking'),('54321','bjones','Savings');/*Table structure for table `accounttransactions` */DROP TABLE IF EXISTS `accounttransactions`;CREATE TABLE `accounttransactions` (  `transactionId` char(12) NOT NULL DEFAULT '',  `fromAccount` varchar(15) DEFAULT '',  `toAccount` varchar(15) DEFAULT NULL,  `transactionType` varchar(100) NOT NULL,  `transactionDate` datetime NOT NULL,  `transactionAmount` decimal(10,2) NOT NULL,  PRIMARY KEY (`transactionId`),  KEY `FK_accounttransactions_from` (`fromAccount`),  KEY `FK_accounttransactions_to` (`toAccount`),  CONSTRAINT `FK_accounttransactions_from` FOREIGN KEY (`fromAccount`) REFERENCES `accounts` (`accountId`) ON DELETE CASCADE,  CONSTRAINT `FK_accounttransactions_to` FOREIGN KEY (`toAccount`) REFERENCES `accounts` (`accountId`) ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8;/*Data for the table `accounttransactions` */insert  into `accounttransactions`(`transactionId`,`fromAccount`,`toAccount`,`transactionType`,`transactionDate`,`transactionAmount`) values ('W06091500863','12345','54321','Funds Transfer','2009-03-11 11:08:39','180.00'),('W214122/5332','12345','54321','Funds Transfer','2009-03-04 10:35:24','150.00'),('W214122/5333',NULL,'54321','Deposit','2009-03-06 11:08:39','7500.00'),('W214122/5334',NULL,'12345','Deposit','2009-03-01 11:09:39','9050.00'),('W214122/5337','12345',NULL,'ATM Withdrawal','2009-03-07 11:09:39','130.00'),('W273218/4101',NULL,'54321','Accrued Interest','2009-03-01 11:09:39','10.08'),('W274158/5551','12345',NULL,'Check Withdrawal','2009-03-03 11:09:39','150.00');/*Table structure for table `users` */DROP TABLE IF EXISTS `users`;CREATE TABLE `users` (  `userId` varchar(100) NOT NULL,  `firstName` varchar(100) NOT NULL,  `lastName` varchar(100) NOT NULL,  `password` varchar(100) NOT NULL,  PRIMARY KEY (`userId`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;/*Data for the table `users` */insert  into `users`(`userId`,`firstName`,`lastName`,`password`) values ('bjones','Brad','Jones','bjones');/* currencies */DROP TABLE IF EXISTS `currencies`;CREATE TABLE `currencies` (  `id` int NOT NULL,  `symbol` varchar(10) NOT NULL,  `name` varchar(50) NOT NULL,  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=latin1;insert  into `currencies`(`id`,`symbol`,`name`) values (1,'AUD','Australian Dollar'),(2,'CHF','Swiss Franc'),(3,'EUR','Euro'),(4,'RUB','Russian Ruble'),(5,'USD','US Dollar'),(6,'JPY','Japanese Yen'),(7,'MXN','Mexican Peso'),(8,'GBP','British Pound');/* Procedure structure for procedure `getAccountTransactions` *//*!50003 DROP PROCEDURE IF EXISTS  `getAccountTransactions` */;DELIMITER $$/*!50003 CREATE DEFINER=`mobilefirst`@`localhost` PROCEDURE `getAccountTransactions`(in accountId varchar(15))BEGINSELECT transactionId, fromAccount, toAccount, transactionDate, transactionAmount, transactionTypeFROM accounttransactionsWHERE accounttransactions.fromAccount = accountId OR accounttransactions.toAccount = accountIdORDER BY transactionDate DESCLIMIT 20;END */$$DELIMITER ;/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;